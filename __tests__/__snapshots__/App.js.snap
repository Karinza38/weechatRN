// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    {
      "backgroundColor": "#333",
      "flex": 1,
    }
  }
>
  <View
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      animatedStyle={
        {
          "value": {},
        }
      }
      collapsable={false}
      forwardedRef={[Function]}
      handlerTag={1}
      handlerType="PanGestureHandler"
      onGestureHandlerEvent={[Function]}
      style={
        {
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
        }
      }
    >
      <View
        animatedStyle={
          {
            "value": {
              "transform": [
                {
                  "translateX": 320,
                },
              ],
            },
          }
        }
        collapsable={false}
        style={
          {
            "flex": 1,
            "transform": [
              {
                "translateX": 320,
              },
            ],
          }
        }
      >
        <View
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          style={
            {
              "flex": 1,
            }
          }
        >
          <RNCSafeAreaView
            edges={
              {
                "bottom": "additive",
                "left": "additive",
                "right": "additive",
                "top": "additive",
              }
            }
            style={
              {
                "backgroundColor": "#333",
                "flex": 1,
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#333",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingBottom": 10,
                }
              }
            >
              <View
                style={
                  {
                    "paddingHorizontal": 5,
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                      "paddingHorizontal": 10,
                      "paddingVertical": 5,
                      "width": 40,
                    }
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#eee",
                          "fontFamily": "Gill Sans",
                          "fontSize": 20,
                          "fontWeight": "bold",
                          "textAlign": "center",
                        },
                        false,
                      ]
                    }
                  >
                    #
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "#eee",
                      "fontFamily": "Thonburi",
                      "fontSize": 15,
                      "fontWeight": "bold",
                    }
                  }
                />
              </View>
              <View
                style={
                  {
                    "paddingHorizontal": 5,
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                      "paddingHorizontal": 10,
                      "paddingVertical": 5,
                      "width": 40,
                    }
                  }
                >
                  <Image
                    source={1}
                  />
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "backgroundColor": "#222",
                  "flex": 1,
                }
              }
            />
          </RNCSafeAreaView>
        </View>
        <View
          accessibilityElementsHidden={false}
          animatedStyle={
            {
              "value": {
                "opacity": 1,
                "zIndex": 0,
              },
            }
          }
          collapsable={false}
          importantForAccessibility="auto"
          pointerEvents="auto"
          style={
            {
              "backgroundColor": "rgba(0, 0, 0, 0.5)",
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            accessibilityLabel="Close drawer"
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "flex": 1,
                "pointerEvents": "auto",
              }
            }
          />
        </View>
      </View>
      <View
        animatedStyle={
          {
            "value": {
              "transform": [
                {
                  "translateX": 0,
                },
              ],
            },
          }
        }
        collapsable={false}
        removeClippedSubviews={false}
        style={
          {
            "backgroundColor": "#121212",
            "bottom": 0,
            "maxWidth": "100%",
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingTop": 0,
            "position": "absolute",
            "top": 0,
            "transform": [
              {
                "translateX": 0,
              },
            ],
            "width": 320,
            "zIndex": 0,
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "#121212",
              "flex": 1,
            }
          }
        >
          <RCTScrollView
            data={
              [
                {
                  "full_name": "irc.freenode.#weechat",
                  "id": "1",
                  "local_variables": {
                    "type": "channel",
                  },
                  "short_name": "#weechat",
                },
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={0.0001}
            stickyHeaderIndices={[]}
            style={
              {
                "backgroundColor": "#121212",
                "flex": 1,
              }
            }
            viewabilityConfigCallbackPairs={[]}
          >
            <View>
              <View
                onFocusCapture={[Function]}
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "flex": 1,
                        "height": 40,
                        "justifyContent": "center",
                        "paddingHorizontal": 20,
                      },
                      null,
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <Text
                        style={
                          [
                            {
                              "color": "#eee",
                              "fontFamily": "Thonburi",
                              "fontSize": 15,
                              "fontWeight": "bold",
                            },
                            null,
                          ]
                        }
                      >
                        #weechat
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
  </View>
</View>
`;
