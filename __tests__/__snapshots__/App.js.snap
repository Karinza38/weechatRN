// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#333",
      "flex": 1,
    }
  }
>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "flex": 1,
          "zIndex": 0,
        }
      }
    >
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        style={
          Object {
            "backgroundColor": "#333",
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#333",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingBottom": 10,
            }
          }
        >
          <View
            style={
              Object {
                "paddingHorizontal": 5,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                  "width": 40,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#eee",
                      "fontFamily": "Gill Sans",
                      "fontSize": 20,
                      "fontWeight": "bold",
                      "textAlign": "center",
                    },
                    false,
                  ]
                }
              >
                #
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#eee",
                  "fontFamily": "Thonburi",
                  "fontSize": 15,
                  "fontWeight": "bold",
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "paddingHorizontal": 5,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={false}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                  "width": 40,
                }
              }
            >
              <Image
                source={1}
              />
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#222",
              "flex": 1,
            }
          }
        />
      </RCTSafeAreaView>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="none"
      style={
        Object {
          "backgroundColor": "#000",
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "zIndex": 1000,
        }
      }
    />
    <View
      accessibilityViewIsModal={false}
      collapsable={false}
      style={
        Object {
          "backgroundColor": undefined,
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": null,
          "top": 0,
          "transform": Array [
            Object {
              "translateX": -320,
            },
          ],
          "width": 320,
          "zIndex": 1001,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#121212",
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "height": 30,
            }
          }
        />
        <RCTScrollView
          data={
            Array [
              Object {
                "full_name": "irc.freenode.#weechat",
                "id": "1",
                "local_variables": Object {
                  "type": "channel",
                },
                "short_name": "#weechat",
              },
            ]
          }
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Object {
              "backgroundColor": "#121212",
              "flex": 1,
            }
          }
          viewabilityConfigCallbackPairs={Array []}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "height": 40,
                      "justifyContent": "center",
                      "paddingHorizontal": 20,
                    },
                    null,
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#eee",
                            "fontFamily": "Thonburi",
                            "fontSize": 15,
                            "fontWeight": "bold",
                          },
                          null,
                        ]
                      }
                    >
                      #weechat
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </View>
</View>
`;
